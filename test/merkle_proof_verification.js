const BN = require('bn.js');
const MerkleProofVerifier = artifacts.require("TestMerkleProofVerifier");

contract("Merkle proof verifier", accounts => {
    it("Case 1", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify(
            "0x0000000000000005000000000000002059cba3bdcfcfdcabe6bc23802966d76367c28a7939fb39f8432620ec466aabaf0000000000000005000000000000000100000000000000000000000000000020fd9445ad175f8f3a6405eaaf5fd583873d3f5d0c903da0aeb97b04fac7fcbcc80000000000000001000000000000000100000000000000204a5e9e2000650fa7d168a06809478bbcb469532092887806f21d7cd074d96905000000000000000100000000000000000000000000000020b0e647e0624a38eeb146c44762a79021f3864d12abd3342fd6edde51f304db850000000000000001000000000000000100000000000000205ca0b18db54a196413a95df26ef750b03adba1e2f0bc08a976545f9cfa83481d0000000000000001000000000000000100000000000000206e0184836cd6eaedf595e70cfb97d83d2d261c987b86f937e0877235ac259abc",
            "0x8107f390abb06908493732a40062b18e3894e0d191b091b273b584cdc6fbd547",
        );
    
    });

    it("Case 2", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify(
            "0x000000000000000400000000000000209ef532c8ff14797df5fc0bf9e8cb2b840f193ec98fbbcd21b1ef07c7954751d40000000000000005000000000000000100000000000000010000000000000020b9437b39e058fb05fb04926d5b1d54bfe46d0e3b164d68f6f4cba33790a597a3000000000000000100000000000000010000000000000020e4aca3407ae184c24b3d385cf72ce11d7bb4cd2f332501a6b70c518870c6061a00000000000000010000000000000000000000000000002023bce05bcd106222c88a3d113bec431944e514095f21d9496433dba2ed5b7444000000000000000100000000000000010000000000000020595f258e9b2af1c4b9a1295f5eb4ac47389c609c76fad2dd05f3a68231940c0f000000000000000100000000000000010000000000000020d63e5dfe357c2cc7abc11de4a36d582d4976503aa64727b076ca5e5278a7c60f",
            "0xedd460afda1dc56b4dcceff9e8be90769b65b75e951fd6f2efbf29aa77f3ac64",
        );
    
    });

    it("Case 3", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify(
            "0x000000000000001100000000000000209e28ec2b409a41cbf5a5990a07a6a9ad3cd1dc9f9ce77cc72951a622079357a600000000000000070000000000000001000000000000000000000000000000200a4beb96a289a55f23bfc0a4c8ab5de2785c4e35e809604e54a9c906410a79090000000000000001000000000000000100000000000000208e219da278bd67eeede6496895074bcb2eb0949cdc8f87df20bf1ff5db922ae5000000000000000100000000000000010000000000000020c5b462d2893b66ededc3ca670da8edf91f5628fb0cb2454ec93337706bc4a6570000000000000001000000000000000100000000000000201cce82f07342e67c7841e7f66e30051df3c18a73441a60ba0262005f39c3826e000000000000000100000000000000000000000000000020b88d9f2df4f93ec23455de4d71fc4629b7c2fe177050922c4518c4644863aa0500000000000000010000000000000001000000000000002094551b73d824e0e13bb1cb0e0a04bf170d53433e542e41a20a77a2a359f1082f0000000000000001000000000000000100000000000000200789fe29b24baa0d0b785310bfe56ce147feba253bd71565d18a79b59398147a",
            "0x358e1c765ef0611ae414d9eab502a2cf4cc13f30782d619a82edb479c7f520fc",
        );
    
    });

    it("Case 4", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify(
            "0x00000000000000d700000000000000200f866a147528c0d18b50f5a56768c0329f41aca3a57423c356ddaedef20e256a0000000000000008000000000000000100000000000000000000000000000020434c2ced0172549c8537bbde2460778e88997f96f05d25f62188ec0080965034000000000000000100000000000000000000000000000020c15a62703fb876ce99af59c47ef726cbb06111051b3fd3d39d9a04851e831de1000000000000000100000000000000000000000000000020e6cc067eb506683b2fe8d266d14d4dddffcf3d3f54ba9ca1630842a612260a1900000000000000010000000000000001000000000000002001454e65dfe583abfdac1c3be255268fd937158b38a3f243b7fd5e82f81a69b40000000000000001000000000000000000000000000000202d9d27070d4d943a43e7928d7932a4d33c6be3e86e3e69516e0938362c149e320000000000000001000000000000000100000000000000208a00a1f9488d96cd2d93dc579dedb6812ec7e213987c8bf1c9c7e8d4bae0c19500000000000000010000000000000000000000000000002035690cab856af2ca815218b32e3d05888c207c238b9a09ee690d8789a469c1000000000000000001000000000000000000000000000000202e70caf956424b025a9b4391e12a22b9ac1c1929ad6c8247a1bf7fee97ec9e84",
            "0x994a6ed2581783fe1755b39e598d67215076bb29d662932a8a4e8448358cd3cf",
        );
    
    });

    it("Case 5 (depth 10)", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify(
            "0x000000000000035a0000000000000020397f039abb6820c4c0672cf0dde0f2446907c4c2ab705fac228873cf0d053c5b000000000000000a000000000000000100000000000000010000000000000020e2c7769ccd2904ed12ca56b3111650b7ae387145ac8c2952bfa00ca7606a7e0d000000000000000100000000000000000000000000000020443aeeb1c60a56aa3ed4bb5c6ccc09df4dc6f4a51dec83c186f1e9db27242c1b000000000000000100000000000000010000000000000020d552e3e4b57460bd4d690e6c30dd45dab31a1a30a2b60c7d215a6d98d0d22ef000000000000000010000000000000000000000000000002020a6c740b97b007fad3f593f5547f4b2bfa5f4510ca990acc9d845efd5ae895d000000000000000100000000000000000000000000000020bdf18fc04e5b5a1474dfeab810e5db06d303b32bbca65022fd560e2d4ef60e050000000000000001000000000000000100000000000000200de044d0d41415683b0c92eb30f9192a2ff5a050f0ef858f74a54fa0550a3cb3000000000000000100000000000000000000000000000020fbfdd0dde410df07e59f028885f0e4a1038f57bb9c8681f9a0a16bb795f756a80000000000000001000000000000000100000000000000203f1a01d93e4a77b4958cadbb0fb2805d649748a42e4f4e9e4704aed152ab65b000000000000000010000000000000000000000000000002078ac3161b9d6d203276113fc9dd0fb0980c981b41537f1795b4d8d6309cd837800000000000000010000000000000000000000000000002084406109ae49701ee36c49c0d2326b1d92d19ef10b9bb651d12966d93423a9f5",
            "0x07616f393738ae85bcec7fc3661dc7d2b5d1ecc4f3ccef810e02b6aa67592b6f",
        );
    
    });

    it("Case 6 (depth 10)", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify_bytes(
            "0x000000000000018e0000000000000020f23573b1d438a3faf5abdeff90b9cadbfe2f364a191bd2348fccf7ffd2ae5a8a000000000000000a0000000000000001000000000000000100000000000000209bc40a38acb162327ffc922a9c4fa1e499783b800d851e3c69b2e02c386804f300000000000000010000000000000000000000000000002094416375aaeba3094de459959dc3befdd304bf56c82baad5d40d05ce9e9f41df000000000000000100000000000000000000000000000020f6653cbe6cd9632f0f340062eb8605e8ca17f194b52e154f27899dac0f7803930000000000000001000000000000000000000000000000201dc83856d53f898a6360f61a6d1093ed06a0a3bab539f95bda12ef07d4ac1fe900000000000000010000000000000001000000000000002013d882d0ca4d4001195d052a4b6c2303b6d475a1f7815527aab4a57810c20deb00000000000000010000000000000001000000000000002055abbe66ab73efd4f4abda79735eaa1ac4b810d6f9059fa6f61d6ce4fb11e45e000000000000000100000000000000010000000000000020eeee68746b9c5d3e1dd65912744e6843c2063d2abc4a7047a0a27b913849efb5000000000000000100000000000000000000000000000020964db6e634f4bf3c41b5d6391c80cf588c9e4edcbabfb16e1c693e7a7cb0ee1d000000000000000100000000000000000000000000000020e4315d186da50425755be5b524a0b402d7964c0f876f13521cb3c9d1c62d227e0000000000000001000000000000000100000000000000206e9678af55ed24b4459f16723793c13f900fc4e26d7f5b2c6838125dd0874f71",
            "0x2f02f12ee0d85f01b28000b3a487751901f680d71971deee609bd23312c20c41c4fd70a4d5cfa68750a63af42daf0d2ea58e06beffe4ac607f7f9392419fd3059c43a971134ff863f6325723e1645286f25844f23cf152bb70e54db18421b620645f9177af89daa5bb31c89c961a228872667aae57cc6ac7b1b77835d82e553d",
        );
    
    });

    it("Case 7 (depth 15)", async () => {
        const instance = await MerkleProofVerifier.deployed();
        await instance.verify_bytes(
            "0x00000000000078710000000000000020f4ec2bcecc16c398873de1d47d7bc29a7ba54cdec88959a6e67dd80479b5b7e7000000000000000f0000000000000001000000000000000000000000000000209ba7f8be7be82c5b335f33f1d580d4348ee4aff17583ebd832a94c43e627893d000000000000000100000000000000010000000000000020db5ba1ad1ad19e67c7754ffc970f633b8f061787e2d0eb58d0e1843b1a88e6a0000000000000000100000000000000010000000000000020c2e9bb3a53a67ff521d0a0a1872706a254f8ba22f42acaf4cd624fb58ade4a6c00000000000000010000000000000001000000000000002085b532d680658b47fa7d6ee61a1ab92bf40a9e03ef88ee8e12049af3920eca0b000000000000000100000000000000000000000000000020ae45527be5b068c24bad5b1041358770e068ce3f6a994ef6ba1fbb8407be8d8800000000000000010000000000000000000000000000002030d577e6c11a26eb74cf448736ff2823529a21d4b743752c2117515e5e866c570000000000000001000000000000000000000000000000203bad2805ac764b7dc6559b29e8a53ce4942a43ac4f1d87cd4619397f84753d5c0000000000000001000000000000000100000000000000209a4a7f99ab3473eb7083d67e6b79b7b5b4b8f0ec47b6d9e2f1e72bfad52d581b000000000000000100000000000000010000000000000020e4b5ff03fa5e14ad8d8c318e6caec7ff0a46caf9aa1c69c5175e6234b813b4c600000000000000010000000000000001000000000000002084cbbc47a3902d44c41db8c61a186f03c04f4362bac2b815e38a1e5784f5d095000000000000000100000000000000010000000000000020a3e6654f80a90f305dbda6fdda2e3ad2e22a9a3b6e1c2f8ad48c04fa0941bf95000000000000000100000000000000000000000000000020757cb2ab7d324c1f8f1ed826eff4bd00079794d4edfa2696d174619dc97eccee0000000000000001000000000000000000000000000000201de1e7bf2f2cbf1b63dfafa923553c2d9ae3390bcc6ded7bba6f6c009b86365c000000000000000100000000000000000000000000000020b8e38c593d1b1b39608bc96f5b7e63cfaacf6fefc33302b2a7acbdf24d0f045600000000000000010000000000000000000000000000002022109d6cfa4ca16abaa2c0f48ddf7e71b50e508436c1ccc2031ab9c0e778eb91",
            "0x98b295117277693195c5ccbc423930a80d767574523ae4830c7d310b474581e0f816f16a8d5a9b221f68de61a10f0aaf857f23d8b9075bc5858cd1ccd252acca689d34f6f7d0181638f778d90682888b01ab63bab3be80384b51041da3b1e70b4e1b0146eb1a5c2311d4fd175685a257310612e4c4921c0fe3202c86d11391202f93661aadc23ebe973bd5edc07745f17d57d542e9f151cc127e52e391e303c07669db232c19e1c354b6b0142ef506ab4cdbed35cd3f01dfbd53c24e37c60fad2fead15b03b21e5769cf6b97c47142114d30461a6f48f92c9bbb7ad2818980b173510c76032bcd6cfa3903beaa46cff7761611e55e0a11f9c68bcc47154cf8889d05ffa030cc0d2a0510e8b056b8a7ccceb9b12cc3c225894ef1d1633dc9ebdaceea7bfeb78828bc98116cef",
        );
    
    });

});
